version: 1.0.{build}

environment:
  matrix:
  - COMPILER: gcc
    PLATFORM: mingw64

install:
  # running under CI
  - set CI_TESTING=1
  - 'echo End intall at: & time /t'
  - SET PATH_ORIGINAL=%PATH%
  - SET "PATH_MINGW64=c:\msys64\mingw64\bin;c:\msys64\usr\bin"
  - SET PATH=%PATH_MINGW64%;%PATH_ORIGINAL%
  - SET WORK_DIR=C:\projects
  - git clone https://github.com/apple/swift-cmark.git %WORK_DIR%/cmark
  - cd %WORK_DIR%/cmark & git checkout -qf master
  # instead of git clone swift
  - c:/msys64/usr/bin/mkdir %WORK_DIR%/swift
  - pacman -S --noconfirm mingw-w64-x86_64-cmake
  - pacman -S --noconfirm mingw-w64-x86_64-ninja
  - pacman -S --noconfirm mingw-w64-x86_64-clang       
  - pacman -S --noconfirm mingw-w64-x86_64-icu         
  - pacman -S --noconfirm mingw-w64-x86_64-libxml2     
  - pacman -S --noconfirm mingw-w64-x86_64-wineditline 
  - pacman -S --noconfirm mingw-w64-x86_64-winpthreads 
  - pacman -S --noconfirm mingw-w64-x86_64-pkg-config  
  - pacman -S --noconfirm mingw-w64-x86_64-dlfcn       
  - pacman -S --noconfirm make                         
  - pacman -S --noconfirm python                       
  - pacman -S --noconfirm python2                      

build_script:
  # Build cmark
  - c:/msys64/usr/bin/mkdir -p %WORK_DIR%/build/NinjaMinGW/cmark
  - cd %WORK_DIR%/build/NinjaMinGW/cmark
  - cmake -G Ninja -D CMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ %WORK_DIR%/cmark
  - ninja
  - cd src
  - cp -p libcmark.dll.a libcmark.a
  - cp -p libcmark.a %WORK_DIR%/swift/libcmark.a
  # Build clang
  
test_script:
  - 'echo test_script'
  - hello
